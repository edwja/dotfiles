.overlay,
atom-panel.modal {
    .text(normal);
    .overlay-shadow-large();
    background-color: @overlay-background-color;
    border-radius: @component-border-radius !important;
    border: 1px solid transparent !important;
    padding: @component-padding @component-padding*2;
    width: 680px;
    margin-left: -340px;
    @media (max-width: 680px) {
        & {
            width: 100%;
            left: 0;
            margin-left: 0;
        }
    }

    label,
    p {
        .text(normal);
        font-weight: 200;
    }

    atom-text-editor.mini,
    atom-text-editor[mini] {
        .text(heading);

        .syntax--text {
            color: @text-color-highlight;
        }
        font-size: 24px;
        line-height: 32px;
        height: auto;
        max-height: none;
        background-color: transparent;
        margin: @component-padding/10 -@component-padding*2;
        padding: @component-padding @component-padding @component-padding @component-padding;
        border: 1px solid transparent;
        border-radius: @component-border-radius;

        &.is-focused:hover,
        &:hover {
            border: 1px solid black;
            background-color: transparent !important;
        }
    }

    &.from-top {
        top: 20vh;
    }

    .error-message,
    .loading {
        .text(subtle);
        height: @component-line-height + @component-padding;
        line-height: @component-line-height + @component-padding;
        padding-bottom: @component-padding;
    }

     &.select-list ol.list-group,
    .select-list ol.list-group,
    ul.list-group {
        margin: 0 -@component-padding*2 -@component-padding;

        li .character-match {
            .text(normal);
        }

        li.selected .character-match {
            .text(selected);
        }

        li {
            padding: @component-padding/2 @component-padding*2;

            &.two-lines {
                padding: @component-padding/2 @component-padding*2;
            }

            .status.icon {
                float: right;
                margin-left: @component-icon-padding;

                &:before {
                    margin-right: 0;
                }
            }

            &.selected {
                border-radius: 0 !important;

                .status.icon {
                    color: @text-color-selected;
                }
            }
        }
    }
}

atom-panel.modal {
    & > div > atom-text-editor[mini]:before {
        color: @text-color-subtle;
        font-family: "Octicons Regular";
        padding-right: @component-padding;
        -webkit-font-smoothing: antialiased; // slightly lighter fg on macOS
        content: "\f011";
        margin-left: @component-padding;
    }

    & > .command-palette > atom-text-editor[mini]:before {
        content: "\f0c8";
    }

    & > .encoding-selector > atom-text-editor[mini]:before {
        content: "\f094";
    }

    & > .grammar-selector > atom-text-editor[mini]:before {
        content: "\f010";
    }

    & > .symbols-view > atom-text-editor[mini]:before {
        content: "\f0c0";
    }

    & > .fuzzy-finder > atom-text-editor[mini]:before {
        content: "\f02e";
    }

    & > .diff-list-view > atom-text-editor[mini]:before {
        content: "\f0d6";
    }
}
